{"version":3,"sources":["constants/wsConstants.ts","components/Header.tsx","components/TopLine.tsx","components/Players.tsx","components/GameGraph.tsx","constants/index.ts","models/GamePlayer.ts","ws/connectMap.ts","ws/connect.ts","AppState.ts","App.tsx","index.tsx"],"names":["WS_EVENT","Header","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react","className","React","TopLine","props","paused","finished","tick","history","map","game","current_millis","coef","Players","observer","_class","players","length","pl","completed","lost","id","href","src","alt","username","activeGameBet","profit","GameGraph","GameGraph_class","_this","call","app","timestep","tickstep","margin","txtTimings","txtY","linesY","graphPoints","pointsPerSec","pointsPer","_pointsData","_pointsDataInt","_currentXLength","_currentYLength","_startXPoint","_startYPoint","yLinesContainer","PIXI","graphArrow","tstyle","fontFamily","fontSize","fontWeight","fill","reaction","started","initScale","_this2","antialias","view","document","getElementById","backgroundColor","renderer","resize","W","screen","width","H","height","axis","lineStyle","moveTo","lineTo","timings","yLines","graph","newLine","position","y","addChild","push","txt_1x","x","stage","beginFill","endFill","pivot","set","visible","drawGrid","ticker","add","drawFunc","setInterval","addPointsData","bind","time","Date","now","passed","Math","ceil","_this3","forEach","line","ind","removeChild","text","_this4","nTimeLines","floor","nLines","clear","txt","slice","i","posX","undefined","lineGraphics","posY","stopped","xScreen","drawPolygon","data","geometry","graphicsData","shape","closeStroke","lPoint","fPoint","tgAngle","rotation","atan","startPixiApp","toFixed","countdown","GamePlayer","GamePlayer_class","params","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","bet","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","WS_SIGNAL_MAP","_WS_SIGNAL_MAP","defineProperty","PLAYER_JOINED","payload","AppState","addGamePlayer","objectSpread","user","bet_amount","PLAYER_LEAVED","gamePlayerMove","GAME_TICK","setTick","GAME_CRASH","gameFinish","Connection","online","ws","WebSocket","onopen","onmessage","onerror","onclose","event","console","log","msgEvent","msgData","JSON","parse","type","errEvent","error","wasClean","warn","state","AppState_class","AppState_descriptor","AppState_descriptor2","AppState_descriptor3","AppState_descriptor4","AppState_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_conn","_cdint","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","setLost","gameplayers","gamehistory","nextRoundTick","currentTick","countDown","get","computed","getOwnPropertyDescriptor","action","player","roundFinished","gameStartPlayers","timeEnd","_this5","filter","_this6","_this7","t","_this8","startedAt","clearInterval","_this9","clearAllPlayers","setTimeout","stoppedAt","_this10","gameStart","_this11","unshift","next_round_millis","planGameStart","window","App","Header_Header","TopLine_TopLine","GameGraph_GameGraph","Players_Players","rootElement","render","mobx_react_module","App_App"],"mappings":"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","file":"static/js/main.bf7fd206.chunk.js","sourcesContent":["export enum WS_EVENT {\r\n  PLAYER_JOINED = \"player_joined\",\r\n  PLAYER_LEAVED = \"player_leaved\",\r\n  GAME_TICK = \"game_tick\",\r\n  GAME_CRASH = \"game_crash\"\r\n}\r\n","import * as React from \"react\";\r\nimport State from \"./../AppState\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport \"./../styles.css\";\r\n\r\nexport class Header extends React.Component<any, any> {\r\n  render() {\r\n    return (\r\n      <div className=\"Header\">\r\n        <div className=\"MenuContainer\">\r\n          <div className=\"Menu\">\r\n            <div className=\"MenuItem\">\r\n              <div className=\"MenuItemIcon lnr-home\"></div>\r\n              <div>HOME</div>\r\n            </div>\r\n            <div className=\"MenuItem active\">\r\n              <div className=\"MenuItemIcon lnr-home\"></div>\r\n              <div>Crash</div>\r\n            </div>\r\n            <div className=\"MenuItem\">\r\n              <div className=\"MenuItemIcon lnr-home\"></div>\r\n              <div>Roulette</div>\r\n            </div>\r\n            <div className=\"MenuItem\">\r\n              <div className=\"MenuItemIcon lnr-home\"></div>\r\n              <div>Джекпот</div>\r\n            </div>\r\n            <div className=\"MenuItem\">\r\n              <div className=\"MenuItemIcon lnr-home\"></div>\r\n              <div>TradeUp</div>\r\n            </div>\r\n            <div className=\"MenuItem\">\r\n              <div className=\"MenuItemIcon lnr-home\"></div>\r\n              <div>Hilo</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport State from \"./../AppState\";\r\nimport { observer } from \"mobx-react\";\r\nimport { GameFinishData } from \"./../models/wsData\";\r\n\r\nimport \"./../styles.css\";\r\n\r\nexport class TopLine extends React.Component<any, any> {\r\n  render() {\r\n    return (\r\n      <div className=\"TopLineContainer\">\r\n        <div className=\"TopLineTracker\">\r\n          <div className=\"TopLineTrackerTxt\">\r\n          {\r\n              !this.props.paused &&\r\n              <span> in progress | good luck </span>\r\n            }\r\n            {this.props.paused && this.props.finished &&\r\n              <span>Crashed @ {this.props.tick}x</span>\r\n            }\r\n            {this.props.paused && !this.props.finished &&\r\n              <span> Starting Game </span>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"HistoryLine\">\r\n          <span className=\"HistoryLabel\">Latest games:</span>\r\n          <div className=\"HistoryList\">\r\n            {this.props.history.map(function(game: GameFinishData) {\r\n              return <div className=\"HistoryLineItem green\" key={game.current_millis}>{game.coef}x</div>;\r\n            })}\r\n          </div>\r\n          <div className=\"HistoryLineIcon lnr-history\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport AppState from \"./../AppState\";\r\nimport { observer } from \"mobx-react\";\r\nimport { GamePlayer } from \"./../models/GamePlayer\";\r\n\r\nimport \"./../styles.css\";\r\n\r\n@observer\r\nexport class Players extends React.Component<any, any> {\r\n  render() {\r\n    return (\r\n      <div className=\"PlayersContainer\">\r\n        <div className=\"PlayerTableHead\">\r\n          <div className=\"pl_count\">\r\n            <span className=\"icon icon-players\">\r\n              <span className=\"path1\" />\r\n              <span className=\"path2\" />\r\n            </span>\r\n            <span className=\"pl_onli\">{this.props.players.length}</span>\r\n          </div>\r\n          <div className=\"pl_count fr\">\r\n            <span className=\"icon icon-gammdom-symbol\" />\r\n            <span className=\"pl_onli\">\r\n              <span>14 282</span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"table_titles\">\r\n          <div className=\"pl_name\">Имя пользователя</div>\r\n          <div className=\"pl_name\">@</div>\r\n          <div className=\"pl_name\">Ставка</div>\r\n          <div className=\"pl_name\">Прибыль</div>\r\n        </div>\r\n\r\n        <div className=\"pl_table_data\">\r\n          {this.props.players.map(function(pl:GamePlayer) {\r\n            return (\r\n              <div className={\"pl_table_data\" + (pl.completed ? ' win' : '') + (pl.lost ? ' lose': '' )} key={pl.id}>\r\n                <div className=\"pl_name\">\r\n                  <a className=\"pl_link\" href=\"/\">\r\n                    <span className=\"image_section\">\r\n                      <img\r\n                        src=\"https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/5e/5ef357707e5ee1acf0bde23fc9a3497c07e44138.jpg\"\r\n                        className=\"user-logo\"\r\n                        alt=\"Dexter 21\"\r\n                      />\r\n                    </span>\r\n                    <span className=\"bet_levels\">\r\n                      <div className=\"bet_level_40\">\r\n                        <span className=\"bet_level_val\">27</span>\r\n                      </div>\r\n                    </span>\r\n                    <span className=\"pl_name_txt\">{pl.username}</span>\r\n                  </a>\r\n                </div>\r\n                <div className=\"pl_game\">{pl.coef || '-'}</div>\r\n                <div className=\"pl_bet\">{pl.activeGameBet}</div>\r\n                <div className=\"pl_profit\">\r\n                  {pl.profit ? '+' + pl.profit : '-'}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\"\r\nimport { observer } from \"mobx-react\"\r\nimport { when,  reaction } from \"mobx\"\r\nimport * as PIXI from \"pixi.js\"\r\n\r\nimport \"./../styles.css\";\r\n\r\ntype PointsDataItem = {\r\n  time: number;\r\n  coef: number;\r\n};\r\n\r\n\r\n@observer\r\nexport class GameGraph extends React.Component<any, any> {\r\n\r\n  public app: PIXI.Application | null = null;\r\n  public timestep: number = 1\r\n  public tickstep: number = 0.5\r\n  public margin: number = 50\r\n  private txtTimings: PIXI.Text[] = []\r\n  private txtY: PIXI.Text[] = []\r\n  private linesY: PIXI.Graphics[] = []\r\n  private graphPoints: PIXI.Point[] = []\r\n  //private maxPoints: number = 100\r\n  private pointsPerSec = 10\r\n  private pointsPer = 30\r\n  private _pointsData: PointsDataItem[] = []\r\n  private _pointsDataInt: any;\r\n  private _currentXLength = 10\r\n  private _currentYLength = 3\r\n  private _startXPoint = 0\r\n  private _startYPoint = 1.85\r\n  private yLinesContainer: PIXI.Container = new PIXI.Container();\r\n  private graphArrow: PIXI.Graphics = new PIXI.Graphics();\r\n  //public passedSec = 0\r\n  private tstyle = new PIXI.TextStyle({\r\n    fontFamily: 'Tahoma',\r\n    fontSize: 16,\r\n    fontWeight: 'normal',\r\n    fill: '#aaaaaa',\r\n  });\r\n\r\n  startPixiApp() {\r\n\r\n    this.app = new PIXI.Application({\r\n      antialias: true,\r\n      view: document.getElementById('GameApp') as HTMLCanvasElement,\r\n      backgroundColor: 0x232c31\r\n    });\r\n    this.app.renderer.resize(1280, 720)\r\n    const W = this.app.screen.width\r\n    const H = this.app.screen.height\r\n\r\n    const axis = new PIXI.Graphics()\r\n    axis.lineStyle(1, 0xAAAAAA, 1)\r\n    axis.moveTo(this.margin, this.margin)\r\n    axis.lineTo(this.margin, H - this.margin)\r\n    axis.lineTo(W - this.margin, H - this.margin)\r\n\r\n    const timings = new PIXI.Graphics()\r\n    const yLines = this.yLinesContainer\r\n    const graph = new PIXI.Graphics()\r\n\r\n    const newLine = new PIXI.Graphics();\r\n    newLine.lineStyle(1, 0xAAAAAA, 1);\r\n    newLine.moveTo(this.margin, 0)\r\n    newLine.lineTo(W - this.margin, 0)\r\n    newLine.position.y = H/2;\r\n    yLines.addChild(newLine);\r\n    this.linesY.push(newLine);\r\n    const txt_1x = new PIXI.Text('1.85x', this.tstyle);\r\n    txt_1x.x = 15;\r\n    txt_1x.y = H - this.margin - 16;\r\n    yLines.addChild(txt_1x);\r\n\r\n\r\n    this.linesY.push(newLine);\r\n\r\n    this.app.stage.addChild(axis)\r\n    this.app.stage.addChild(timings)\r\n    this.app.stage.addChild(yLines)\r\n    this.app.stage.addChild(graph)\r\n\r\n    this.graphArrow.lineStyle(1, 0x00FF00, 1);\r\n\r\n    this.graphArrow.beginFill(0x00FF00);\r\n    this.graphArrow.moveTo(10, 0);\r\n    this.graphArrow.lineTo(20, 35);\r\n    this.graphArrow.lineTo(0, 35);\r\n    this.graphArrow.lineTo(10, 0);\r\n    this.graphArrow.endFill();\r\n    this.graphArrow.pivot.set(10, 20);\r\n\r\n    this.graphArrow.visible = false;\r\n    this.app.stage.addChild(this.graphArrow);\r\n\r\n    this.drawGrid(timings, yLines)\r\n    this.app.ticker.add(() => {\r\n      this.drawGrid(timings, yLines)\r\n      this.drawFunc(graph);\r\n    });\r\n    this._pointsDataInt = setInterval(this.addPointsData.bind(this), 1000/this.pointsPerSec);\r\n\r\n  }\r\n\r\n  constructor(props:any) {\r\n    super(props)\r\n\r\n    reaction(\r\n      () => this.props.started,\r\n      started => {\r\n        if (started) {\r\n          this.initScale();\r\n          this._pointsData = []\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  addPointsData() {\r\n    if ( this.props.paused && this.props.finished ) {\r\n      this._pointsData = []\r\n      return\r\n    }\r\n    if (!this.props.started) return\r\n    this._pointsData.push({ time: (Date.now() - this.props.started) / 1000, coef: this.props.tick })\r\n\r\n    const passed = ((Date.now() - this.props.started) / 1000);\r\n    this._currentXLength = passed > 10 ? passed : 10;\r\n    if (this._currentXLength > 10) {\r\n      if (this._currentXLength < 30) this.timestep = 2\r\n      else if (this._currentXLength < 60) this.timestep = 5\r\n      else this.timestep = 10\r\n    }\r\n    const upTick = Math.ceil((this.props.tick - this._startYPoint) * this.tickstep) / this.tickstep;\r\n    this._currentYLength = (this.props.tick - this._startYPoint < 1) ? 3 : (this.props.tick - this._startYPoint);\r\n    if ( this._currentYLength > 1 ) {\r\n      if (this._currentYLength <= 3) this.tickstep = 1\r\n      else if (this._currentYLength <=6) this.tickstep = 2\r\n      else this.tickstep = 4\r\n    }\r\n    //console.log('addPoints', this._pointsData.length, this.props.tick);\r\n  }\r\n\r\n  initScale() {\r\n    if (!this.app) return\r\n\r\n    const H = this.app.screen.height;\r\n    this._currentXLength = 10\r\n    this._currentYLength = 3\r\n    this.timestep  = 1\r\n    this.tickstep = 0.5\r\n\r\n    this.linesY.forEach((line, ind)=>{\r\n      if (ind > 0) this.yLinesContainer.removeChild(line)\r\n    })\r\n    this.linesY.length = 1;\r\n    this.linesY[0].position.y = H / 2;\r\n\r\n    this.txtY.forEach((text, ind)=>{\r\n      if (ind > 0) this.yLinesContainer.removeChild(text)\r\n    })\r\n    this.txtY.length = 1;\r\n    this.txtY[0].position.y = H / 2;\r\n    this.txtY[0].text = '2.5x';\r\n\r\n  }\r\n\r\n  drawGrid(timings: PIXI.Graphics, yLines: PIXI.Container) {\r\n\r\n    if (!this.app ) return;\r\n    const W = this.app.screen.width;\r\n    const H = this.app.screen.height;\r\n\r\n    const nTimeLines: number = Math.floor(this._currentXLength / this.timestep);\r\n    const nLines: number = Math.floor(this._currentYLength / this.tickstep);\r\n\r\n    timings.clear();\r\n    timings.lineStyle(1, 0xAAAAAA, 1);\r\n    if (this.txtTimings.length !== nTimeLines) {\r\n      this.txtTimings.forEach((txt, ind)=>{\r\n        if (ind >= nTimeLines) {\r\n          timings.removeChild(txt);\r\n        }\r\n      });\r\n      this.txtTimings = this.txtTimings.slice(0, nTimeLines);\r\n    }\r\n\r\n    for (let i = 0; i < nTimeLines; i++) {\r\n      const posX = this.margin + i * ((W - this.margin * 2) / (this._currentXLength / this.timestep) );\r\n      timings.moveTo( posX, H - this.margin)\r\n      timings.lineTo( posX, H - this.margin - 10)\r\n\r\n      if (!this.txtTimings[i]) {\r\n        this.txtTimings[i] = new PIXI.Text(i * this.timestep + 's', this.tstyle);\r\n        this.txtTimings[i].x = posX;\r\n        this.txtTimings[i].y = H - this.margin + 15;\r\n        timings.addChild(this.txtTimings[i]);\r\n      }\r\n      else {\r\n        this.txtTimings[i].text = i * this.timestep + 's'\r\n        this.txtTimings[i].x = posX;\r\n        this.txtTimings[i].y = H - this.margin + 15;\r\n      }\r\n    }\r\n\r\n    if (this.linesY.length < nLines) {\r\n      const newLine = new PIXI.Graphics();\r\n      newLine.lineStyle(1, 0xAAAAAA, 1, undefined, true);\r\n      newLine.moveTo(this.margin, 0)\r\n      newLine.lineTo(W - this.margin, 0)\r\n      newLine.position.y = H/2;\r\n      // (newLine as any).roundPixels = true;\r\n      yLines.addChild(newLine);\r\n      this.linesY.push(newLine);\r\n    }\r\n    /*\r\n    else if (this.linesY.length > nLines) {\r\n      this.linesY.forEach((line, ind)=>{\r\n        //if (ind > nLines - 1) yLines.removeChild(line)\r\n      })\r\n      this.linesY.length = nLines;\r\n    }\r\n    */\r\n\r\n    /*\r\n    if (this.txtY.length > this.linesY.length) {\r\n      this.txtY.forEach(txt => {\r\n        yLines.removeChild(txt)\r\n      })\r\n      this.txtY.length = this.linesY.length;\r\n    }\r\n    */\r\n\r\n    this.linesY.forEach((lineGraphics, ind)=>{\r\n      const posY = H - ind * (H - this.margin * 2) / (this._currentYLength/this.tickstep) - this.margin;\r\n      lineGraphics.position.y = posY;\r\n      if (!this.txtY[ind]) {\r\n        this.txtY[ind] = new PIXI.Text((this._startYPoint + ind * this.tickstep) + 'x', this.tstyle);\r\n        this.txtY[ind].x = 15;\r\n        this.txtY[ind].y = posY - 16;\r\n        yLines.addChild(this.txtY[ind]);\r\n      }\r\n      else {\r\n        this.txtY[ind].text = (this._startYPoint + ind * this.tickstep) + 'x';\r\n        this.txtY[ind].x = 15;\r\n        this.txtY[ind].y = posY - 16;\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n  drawFunc(graph: PIXI.Graphics) {\r\n\r\n    if (!this.app || !this.props.started || this.props.stopped || !this.props.tick) return;\r\n    if (!this._pointsData.length) {\r\n      graph.clear()\r\n      this.graphPoints = [];\r\n      return\r\n    }\r\n\r\n    const W = this.app.screen.width;\r\n    const H = this.app.screen.height;\r\n\r\n    for (let i=0; i < this._pointsData.length; i++) {\r\n      if (!this.graphPoints[i]) {\r\n        this.graphPoints[i] = new PIXI.Point();\r\n      }\r\n      let xScreen = this.margin + Math.floor(this._pointsData[i].time  * (( W - 2*this.margin )/this._currentXLength));\r\n      let scale = 1;\r\n      let xGraph = xScreen * scale;\r\n      this.graphPoints[i].x = xScreen;\r\n\r\n      //this.graphPoints[i].y = ((H - 2 * this.margin) / this._currentYLength) * (this._pointsData[i].coef - this._startYPoint);\r\n\r\n      this.graphPoints[i].y = H - ((H - 2 * this.margin) / this._currentYLength) * (this._pointsData[i].coef - this._startYPoint) - this.margin;\r\n      //this.graphPoints[i].y = Math.pow(xScreen / 700, 1.2) * 350/ scale;\r\n    }\r\n\r\n    graph.clear();\r\n    graph.lineStyle(10, 0x00FF00, 1);\r\n    graph.drawPolygon(this.graphPoints);\r\n\r\n    // hack\r\n    const data = (graph.geometry as any).graphicsData;\r\n    data[data.length-1].shape.closeStroke = false;\r\n\r\n    const lPoint = this.graphPoints[this.graphPoints.length - 1];\r\n    const fPoint = this.graphPoints[0];\r\n    const tgAngle = -(lPoint.x - fPoint.x)/(lPoint.y - fPoint.y);\r\n\r\n    this.graphArrow.position.x = lPoint.x;\r\n    this.graphArrow.position.y = lPoint.y;\r\n    this.graphArrow.rotation = Math.atan(tgAngle);\r\n    if (!this.graphArrow.visible) this.graphArrow.visible = true;\r\n\r\n    //graph.lineStyle(0);\r\n    //graph.position.x = 0;\r\n    //graph.position.y = H;\r\n    //graph.scale.y = -1;\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.startPixiApp()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"GameStage\">\r\n        <div className=\"GameGraphContainer\">\r\n          <div className=\"max-profit\">\r\n            <i className=\"clickable fa fa-line-chart\" />\r\n            Max profit: 10 000 000 coins\r\n          </div>\r\n          <canvas id=\"GameApp\" width=\"800\" height=\"600\" />\r\n          <div className=\"GameGraphText\">\r\n          {\r\n            !this.props.paused &&\r\n            <span className=\"GameGraphTick\"> {this.props.tick.toFixed(2)} </span>\r\n          }\r\n          { this.props.paused && this.props.finished &&\r\n              <span className=\"GameGraphCrashed\">Crashed @ {this.props.tick}x</span>\r\n          }\r\n            {this.props.paused && !this.props.finished &&\r\n            < span className=\"GameGraphNext\">Next round in {this.props.countdown}s</span>\r\n          }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export * from \"./wsConstants\";\r\n\r\nexport const GAME_HISTORY_LENGTH = 5;\r\n","import { observable } from \"mobx\";\r\n\r\ntype GamePlayerParams = {\r\n  id: number;\r\n  username: string;\r\n  bet: number;\r\n};\r\n\r\nexport class GamePlayer {\r\n  readonly id: number;\r\n  readonly username: string;\r\n\r\n  @observable public activeGameBet: number;\r\n  @observable public completed: boolean = false;\r\n  @observable public profit: number = 0;\r\n  @observable public coef: number = 0;\r\n  @observable public lost: boolean = false;\r\n\r\n  constructor(params: GamePlayerParams) {\r\n    this.id = params.id;\r\n    this.username = params.username;\r\n    this.activeGameBet = params.bet;\r\n  }\r\n}\r\n\r\nexport default GamePlayer;\r\n","import { WS_EVENT } from \"./../constants\";\r\nimport AppState from \"./../AppState\";\r\nimport { GamePlayer } from \"./../models/GamePlayer\";\r\n\r\nexport const WS_SIGNAL_MAP: { [index: string]:  (payload: any)=> void  }  = {\r\n  [WS_EVENT.PLAYER_JOINED]: payload => {\r\n    AppState.addGamePlayer(\r\n      new GamePlayer({ ...payload.user, bet: payload.bet_amount })\r\n    );\r\n  },\r\n  [WS_EVENT.PLAYER_LEAVED]: payload => {\r\n    AppState.gamePlayerMove({ ...payload });\r\n  },\r\n  [WS_EVENT.GAME_TICK]: payload => {\r\n    AppState.setTick(payload.coef)\r\n  },\r\n  [WS_EVENT.GAME_CRASH]: payload => {\r\n    AppState.gameFinish(payload);\r\n  }\r\n};\r\n","import { WS_SIGNAL_MAP } from \"./connectMap\";\r\nimport { MessageData } from \"./../models/wsData\";\r\n\r\ninterface IConnection {\r\n  online: Boolean;\r\n  ws: WebSocket;\r\n}\r\n\r\ninterface IMessageData {\r\n  type: string;\r\n  payload: object;\r\n}\r\n\r\nexport class Connection implements IConnection {\r\n  public online: Boolean;\r\n  public ws: WebSocket;\r\n\r\n  constructor() {\r\n    this.online = false;\r\n    this.ws = new WebSocket(\"wss://crash.heja.games/ws\");\r\n    this.ws.onopen = this.onopen;\r\n    this.ws.onmessage = this.onmessage;\r\n    this.ws.onerror = this.onerror;\r\n    this.ws.onclose = this.onclose;\r\n  }\r\n\r\n  onopen(event: Event) {\r\n    console.log(\" connection opened \");\r\n  }\r\n\r\n  onmessage(msgEvent: MessageEvent) {\r\n    const msgData: MessageData =\r\n      typeof msgEvent.data === \"string\" ? JSON.parse(msgEvent.data) : null;\r\n    if (!msgData) return;\r\n    WS_SIGNAL_MAP[msgData.type](msgData.payload);\r\n  }\r\n\r\n  onerror(errEvent: Event) {\r\n    console.error(\"err: \", errEvent);\r\n  }\r\n\r\n  onclose(event: CloseEvent) {\r\n    if (event.wasClean) {\r\n      // no drop\r\n    } else {\r\n      //dropped\r\n      console.warn(\"connection dropped!\");\r\n    }\r\n    //reconnect\r\n  }\r\n}\r\n","import { observable, action, computed } from \"mobx\";\r\nimport { Connection } from \"./ws/connect\";\r\nimport { GamePlayer } from \"./models/GamePlayer\";\r\nimport { MovePlayerData, GameFinishData } from \"./models/wsData\";\r\nimport { GAME_HISTORY_LENGTH } from \"./constants\";\r\n\r\nexport class AppState {\r\n  @observable gamehistory: GameFinishData[];\r\n  @observable gameplayers: GamePlayer[];\r\n  @observable paused: boolean = false;\r\n  @observable roundFinished: boolean = false;\r\n  @observable nextRoundTick: number;\r\n  @observable currentTick: number;\r\n  @observable countDown: number;\r\n  @observable startedAt: number = 0;\r\n  @observable stoppedAt: number = 0;\r\n\r\n  private _conn: Connection;\r\n  private _cdint: any;\r\n\r\n  constructor() {\r\n    this.gamehistory = [];\r\n    this.gameplayers = [];\r\n    this.paused = true;\r\n    this.nextRoundTick = 0;\r\n    this.currentTick = 0;\r\n    this.countDown = 0;\r\n    this._conn = new Connection();\r\n  }\r\n\r\n  @computed get historyLastGames() {\r\n    //if (this.gamehistory.length <= 5) return this.gamehistory;\r\n    //return this.gamehistory.slice(this.gamehistory.length - 5, 5);\r\n    return this.gamehistory\r\n  }\r\n\r\n  @action\r\n  initConnection = (): void => {\r\n    this._conn = new Connection();\r\n  };\r\n\r\n  @action\r\n  addGamePlayer = (player: GamePlayer): void => {\r\n    if (this.roundFinished) {\r\n      this.gameStartPlayers();\r\n    }\r\n    this.gameplayers.push(player);\r\n    //console.log('addGamePlayer', this.gameplayers.length);\r\n    console.timeEnd('roundstart');\r\n  };\r\n\r\n  @action\r\n  gamePlayerMove = (payload: MovePlayerData): void => {\r\n    this.gameplayers = this.gameplayers.map(pl => {\r\n      if (pl.id === payload.user.id) {\r\n        pl.completed = true;\r\n        pl.profit = payload.profit;\r\n        pl.coef = payload.coef;\r\n        //console.log('move player upd', payload.user.id);\r\n      }\r\n      return pl;\r\n    });\r\n  };\r\n\r\n  @action\r\n  deleteGamePlayer = (id: number): void => {\r\n    this.gameplayers = this.gameplayers.filter(pl => pl.id !== id);\r\n  };\r\n\r\n  @action\r\n  clearAllPlayers = (): void => {\r\n    this.gameplayers = [];\r\n  };\r\n\r\n  @action\r\n  setTick = (t: number): void => {\r\n    this.currentTick = t;\r\n  };\r\n\r\n  @action\r\n  gameStart = (): void => {\r\n    this.paused = false;\r\n    this.startedAt = Date.now();\r\n    this.nextRoundTick = 0;\r\n    clearInterval(this._cdint);\r\n    this.countDown = 0;\r\n  };\r\n\r\n  @action\r\n  gameStartPlayers = (): void => {\r\n    this.clearAllPlayers();\r\n    setTimeout(()=>{\r\n      this.roundFinished = false;\r\n    }, 1000);\r\n    this.startedAt = 0;\r\n    this.stoppedAt = 0;\r\n  }\r\n\r\n  @action\r\n  planGameStart = (): void => {\r\n    //console.log('planGameStart', this.gamehistory.length, this.gameplayers.length, this.nextRoundTick - Date.now());\r\n    console.time('roundstart');\r\n    //!\r\n    setTimeout(this.gameStart, this.nextRoundTick - Date.now());\r\n    this.countDown = Math.floor((this.nextRoundTick - Date.now())/100)/10;\r\n    this._cdint = setInterval(()=>{\r\n      this.countDown = Math.floor((this.nextRoundTick - Date.now()) / 100) / 10;\r\n    }, 100);\r\n  };\r\n\r\n  @action\r\n  gameFinish = (payload: GameFinishData): void => {\r\n    this.paused = true;\r\n    this.roundFinished = true;\r\n    this.stoppedAt = Date.now();\r\n    this.gamehistory.unshift(payload);\r\n    this.nextRoundTick = payload.next_round_millis;\r\n\r\n    if (this.gamehistory.length > GAME_HISTORY_LENGTH) {\r\n      this.gamehistory = this.gamehistory.slice(\r\n        0,\r\n        GAME_HISTORY_LENGTH\r\n      );\r\n    }\r\n\r\n    this.setLost();\r\n    this.planGameStart();\r\n  };\r\n\r\n  setLost = (): void => {\r\n    this.gameplayers = this.gameplayers.map(pl=>{\r\n      if (!pl.completed) pl.lost = true;\r\n      return pl;\r\n    })\r\n  }\r\n}\r\n\r\nlet state = new AppState();\r\n\r\n(window as any).state = state;\r\nexport default state;\r\n","import * as React from \"react\";\r\n\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport { Header } from \"./components/Header\";\r\nimport { TopLine } from \"./components/TopLine\";\r\nimport { Players } from \"./components/Players\";\r\nimport { GameGraph } from \"./components/GameGraph\";\r\nimport AppState from \"./AppState\";\r\n\r\nimport \"./styles.css\";\r\n\r\n@observer\r\nexport default class App extends React.Component<{}, {}> {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <div className=\"gameContainer\">\r\n          <TopLine history={AppState.gamehistory} tick={AppState.currentTick} paused={AppState.paused} finished={AppState.roundFinished}/>\r\n          <div>\r\n            <div className=\"middle_panel\">\r\n              <GameGraph tick={AppState.currentTick} paused={AppState.paused} finished={AppState.roundFinished} countdown={AppState.countDown} started={AppState.startedAt} stopped={AppState.stoppedAt}/>\r\n            </div>\r\n            <div className=\"right_panel\">\r\n              <Players players={AppState.gameplayers} paused={AppState.paused}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"mobx-react\";\r\nimport App from \"./App\";\r\nimport AppState from \"./AppState\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(\r\n  <Provider {...AppState}>\r\n    <App />\r\n  </Provider>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}